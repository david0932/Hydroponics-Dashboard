{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm mt-2',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0TACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-toast.ts"],"sourcesContent":["\"use client\"\n\n// Inspired by react-hot-toast library\nimport * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 356, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 466, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\n\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"./table\";\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n    typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"];\n    displayAsTable?: boolean\n  }\n>(({ id, className, children, config, displayAsTable, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n  const data = children?.props?.data;\n  \n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        {!displayAsTable ? (\n          <>\n            <ChartStyle id={chartId} config={config} />\n            <RechartsPrimitive.ResponsiveContainer>\n              {children}\n            </RechartsPrimitive.ResponsiveContainer>\n          </>\n        ) : (\n          <Table>\n            <TableHeader>\n              <TableRow>\n                {data && Object.keys(data[0]).map((key) => (\n                  <TableHead key={key}>{key}</TableHead>\n                ))}\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {data?.map((row: any, index: any) => (\n                <TableRow key={index}>\n                  {Object.keys(row).map((key) => (\n                    <TableCell key={key}>\n                      {row[key]}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        )}\n      </div>\n\n\n\n\n\n\n\n\n\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"],"names":[],"mappings":";;;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AANA;;;;;;AAQA,uCAAuC;AACvC,MAAM,SAAS;IAAE,OAAO;IAAI,MAAM;AAAQ;AAgB1C,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,gBAAmB,AAAD,EAA4B;AAEnE,SAAS;IACP,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE;IAEjC,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT;AAEA,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EASpC,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,cAAc,EAAE,GAAG,OAAO,EAAE;IAChE,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,QAAW,AAAD;IAC3B,MAAM,UAAU,CAAC,MAAM,EAAE,MAAM,SAAS,OAAO,CAAC,MAAM,KAAK;IAC3D,MAAM,OAAO,UAAU,OAAO;IAE9B,qBACE,8OAAC,aAAa,QAAQ;QAAC,OAAO;YAAE;QAAO;kBACrC,cAAA,8OAAC;YACC,cAAY;YACZ,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,ypBACA;YAED,GAAG,KAAK;sBAER,CAAC,+BACA;;kCACE,8OAAC;wBAAW,IAAI;wBAAS,QAAQ;;;;;;kCACjC,8OAAC,mKAAA,CAAA,sBAAqC;kCACnC;;;;;;;6CAIL,8OAAC,iIAAA,CAAA,QAAK;;kCACJ,8OAAC,iIAAA,CAAA,cAAW;kCACV,cAAA,8OAAC,iIAAA,CAAA,WAAQ;sCACN,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,oBACjC,8OAAC,iIAAA,CAAA,YAAS;8CAAY;mCAAN;;;;;;;;;;;;;;;kCAItB,8OAAC,iIAAA,CAAA,YAAS;kCACP,MAAM,IAAI,CAAC,KAAU,sBACpB,8OAAC,iIAAA,CAAA,WAAQ;0CACN,OAAO,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,oBACrB,8OAAC,iIAAA,CAAA,YAAS;kDACP,GAAG,CAAC,IAAI;uCADK;;;;;+BAFL;;;;;;;;;;;;;;;;;;;;;;;;;;AAuB/B;AACA,eAAe,WAAW,GAAG;AAE7B,MAAM,aAAa,CAAC,EAAE,EAAE,EAAE,MAAM,EAAuC;IACrE,MAAM,cAAc,OAAO,OAAO,CAAC,QAAQ,MAAM,CAC/C,CAAC,GAAG,OAAO,GAAK,OAAO,KAAK,IAAI,OAAO,KAAK;IAG9C,IAAI,CAAC,YAAY,MAAM,EAAE;QACvB,OAAO;IACT;IAEA,qBACE,8OAAC;QACC,yBAAyB;YACvB,QAAQ,OAAO,OAAO,CAAC,QACpB,GAAG,CACF,CAAC,CAAC,OAAO,OAAO,GAAK,CAAC;AAClC,EAAE,OAAO,aAAa,EAAE,GAAG;AAC3B,EAAE,YACC,GAAG,CAAC,CAAC,CAAC,KAAK,WAAW;oBACrB,MAAM,QACJ,WAAW,KAAK,EAAE,CAAC,MAAuC,IAC1D,WAAW,KAAK;oBAClB,OAAO,QAAQ,CAAC,UAAU,EAAE,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC,GAAG;gBACjD,GACC,IAAI,CAAC,MAAM;;AAEd,CAAC,EAEU,IAAI,CAAC;QACV;;;;;;AAGN;AAEA,MAAM,eAAe,uJAAA,CAAA,UAAyB;AAE9C,MAAM,oCAAsB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAWzC,CACE,EACE,MAAM,EACN,OAAO,EACP,SAAS,EACT,YAAY,KAAK,EACjB,YAAY,KAAK,EACjB,gBAAgB,KAAK,EACrB,KAAK,EACL,cAAc,EACd,cAAc,EACd,SAAS,EACT,KAAK,EACL,OAAO,EACP,QAAQ,EACT,EACD;IAEA,MAAM,EAAE,MAAM,EAAE,GAAG;IAEnB,MAAM,eAAe,CAAA,GAAA,qMAAA,CAAA,UAAa,AAAD,EAAE;QACjC,IAAI,aAAa,CAAC,SAAS,QAAQ;YACjC,OAAO;QACT;QAEA,MAAM,CAAC,KAAK,GAAG;QACf,MAAM,MAAM,GAAG,YAAY,KAAK,OAAO,IAAI,KAAK,IAAI,IAAI,SAAS;QACjE,MAAM,aAAa,4BAA4B,QAAQ,MAAM;QAC7D,MAAM,QACJ,CAAC,YAAY,OAAO,UAAU,WAC1B,MAAM,CAAC,MAA6B,EAAE,SAAS,QAC/C,YAAY;QAElB,IAAI,gBAAgB;YAClB,qBACE,8OAAC;gBAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;0BAC/B,eAAe,OAAO;;;;;;QAG7B;QAEA,IAAI,CAAC,OAAO;YACV,OAAO;QACT;QAEA,qBAAO,8OAAC;YAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;sBAAkB;;;;;;IAC7D,GAAG;QACD;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,IAAI,CAAC,UAAU,CAAC,SAAS,QAAQ;QAC/B,OAAO;IACT;IAEA,MAAM,YAAY,QAAQ,MAAM,KAAK,KAAK,cAAc;IAExD,qBACE,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0HACA;;YAGD,CAAC,YAAY,eAAe;0BAC7B,8OAAC;gBAAI,WAAU;0BACZ,QAAQ,GAAG,CAAC,CAAC,MAAM;oBAClB,MAAM,MAAM,GAAG,WAAW,KAAK,IAAI,IAAI,KAAK,OAAO,IAAI,SAAS;oBAChE,MAAM,aAAa,4BAA4B,QAAQ,MAAM;oBAC7D,MAAM,iBAAiB,SAAS,KAAK,OAAO,CAAC,IAAI,IAAI,KAAK,KAAK;oBAE/D,qBACE,8OAAC;wBAEC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uGACA,cAAc,SAAS;kCAGxB,aAAa,MAAM,UAAU,aAAa,KAAK,IAAI,GAClD,UAAU,KAAK,KAAK,EAAE,KAAK,IAAI,EAAE,MAAM,OAAO,KAAK,OAAO,kBAE1D;;gCACG,YAAY,qBACX,8OAAC,WAAW,IAAI;;;;2CAEhB,CAAC,+BACC,8OAAC;oCACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kEACA;wCACE,eAAe,cAAc;wCAC7B,OAAO,cAAc;wCACrB,mDACE,cAAc;wCAChB,UAAU,aAAa,cAAc;oCACvC;oCAEF,OACE;wCACE,cAAc;wCACd,kBAAkB;oCACpB;;;;;;8CAKR,8OAAC;oCACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4CACA,YAAY,cAAc;;sDAG5B,8OAAC;4CAAI,WAAU;;gDACZ,YAAY,eAAe;8DAC5B,8OAAC;oDAAK,WAAU;8DACb,YAAY,SAAS,KAAK,IAAI;;;;;;;;;;;;wCAGlC,KAAK,KAAK,kBACT,8OAAC;4CAAK,WAAU;sDACb,KAAK,KAAK,CAAC,cAAc;;;;;;;;;;;;;;uBAhD/B,KAAK,OAAO;;;;;gBAwDvB;;;;;;;;;;;;AAIR;AAEF,oBAAoB,WAAW,GAAG;AAElC,MAAM,cAAc,sJAAA,CAAA,SAAwB;AAE5C,MAAM,mCAAqB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAQxC,CACE,EAAE,SAAS,EAAE,WAAW,KAAK,EAAE,OAAO,EAAE,gBAAgB,QAAQ,EAAE,OAAO,EAAE,EAC3E;IAEA,MAAM,EAAE,MAAM,EAAE,GAAG;IAEnB,IAAI,CAAC,SAAS,QAAQ;QACpB,OAAO;IACT;IAEA,qBACE,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0CACA,kBAAkB,QAAQ,SAAS,QACnC;kBAGD,QAAQ,GAAG,CAAC,CAAC;YACZ,MAAM,MAAM,GAAG,WAAW,KAAK,OAAO,IAAI,SAAS;YACnD,MAAM,aAAa,4BAA4B,QAAQ,MAAM;YAE7D,qBACE,8OAAC;gBAEC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV;;oBAGD,YAAY,QAAQ,CAAC,yBACpB,8OAAC,WAAW,IAAI;;;;6CAEhB,8OAAC;wBACC,WAAU;wBACV,OAAO;4BACL,iBAAiB,KAAK,KAAK;wBAC7B;;;;;;oBAGH,YAAY;;eAfR,KAAK,KAAK;;;;;QAkBrB;;;;;;AAGN;AAEF,mBAAmB,WAAW,GAAG;AAEjC,gDAAgD;AAChD,SAAS,4BACP,MAAmB,EACnB,OAAgB,EAChB,GAAW;IAEX,IAAI,OAAO,YAAY,YAAY,YAAY,MAAM;QACnD,OAAO;IACT;IAEA,MAAM,iBACJ,aAAa,WACb,OAAO,QAAQ,OAAO,KAAK,YAC3B,QAAQ,OAAO,KAAK,OAChB,QAAQ,OAAO,GACf;IAEN,IAAI,iBAAyB;IAE7B,IACE,OAAO,WACP,OAAO,OAAO,CAAC,IAA4B,KAAK,UAChD;QACA,iBAAiB,OAAO,CAAC,IAA4B;IACvD,OAAO,IACL,kBACA,OAAO,kBACP,OAAO,cAAc,CAAC,IAAmC,KAAK,UAC9D;QACA,iBAAiB,cAAc,CAC7B,IACD;IACH;IAEA,OAAO,kBAAkB,SACrB,MAAM,CAAC,eAAe,GACtB,MAAM,CAAC,IAA2B;AACxC","debugId":null}},
    {"offset": {"line": 812, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/services/sensor.ts"],"sourcesContent":["/**\n * Represents sensor data for a hydroponic system.\n */\nexport interface SensorData {\n  /**\n   * The temperature reading from the sensor (in Celsius).\n   */\n  temperatureCelsius: number;\n  /**\n   * The water temperature reading from the sensor (in Celsius).\n   */\n  waterTemperatureCelsius: number;\n  /**\n   * The humidity reading from the sensor (percentage).\n   */\n  humidity: number;\n  /**\n   * The pH level reading from the sensor.\n   */\n  pH: number;\n  /**\n   * The water level reading from the sensor (in cm).\n   */\n  waterLevelCm: number;\n   /**\n   * The EC reading from the sensor.\n   */\n  ec: number;\n  /**\n   * The dissolved oxygen reading from the sensor (in ppm).\n   */\n  dissolvedOxygen: number;\n}\n\n/**\n * Asynchronously retrieves the latest sensor data.\n *\n * @returns A promise that resolves to a SensorData object.\n */\nexport async function getSensorData(): Promise<SensorData> {\n  // TODO: Implement this by calling an API.\n  return {\n    temperatureCelsius: 25.5,\n    waterTemperatureCelsius: 22.3,\n    humidity: 60.2,\n    pH: 6.5,\n    waterLevelCm: 15.0,\n    ec: 1.2,\n    dissolvedOxygen: 7.5,\n  };\n}\n\n"],"names":[],"mappings":"AAAA;;CAEC;;;AAqCM,eAAe;IACpB,0CAA0C;IAC1C,OAAO;QACL,oBAAoB;QACpB,yBAAyB;QACzB,UAAU;QACV,IAAI;QACJ,cAAc;QACd,IAAI;QACJ,iBAAiB;IACnB;AACF","debugId":null}},
    {"offset": {"line": 835, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/suggest-action-from-sensor-data.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview Provides AI-powered recommendations for optimizing hydroponic system conditions based on sensor data.\n *\n * - suggestActionFromSensorData - A function that suggests actions based on sensor data.\n * - SuggestActionFromSensorDataInput - The input type for the suggestActionFromSensorData function.\n * - SuggestActionFromSensorDataOutput - The return type for the suggestActionFromSensorData function.\n */\n\nimport {ai} from '@/ai/ai-instance';\nimport {z} from 'genkit';\nimport {SensorData} from '@/services/sensor';\n\nconst SuggestActionFromSensorDataInputSchema = z.object({\n  sensorData: z.object({\n    temperatureCelsius: z.number().describe('The temperature reading from the sensor (in Celsius).'),\n    waterTemperatureCelsius: z.number().describe('The water temperature reading from the sensor (in Celsius).'),\n    humidity: z.number().describe('The humidity reading from the sensor (percentage).'),\n    pH: z.number().describe('The pH level reading from the sensor.'),\n    waterLevelCm: z.number().describe('The water level reading from the sensor (in cm).'),\n    ec: z.number().describe('The EC level reading from the sensor.'),\n    dissolvedOxygen: z.number().describe('The dissolved oxygen reading from the sensor (in ppm).'),\n  }).describe('The sensor data from the hydroponic system.'),\n  temperatureRange: z.object({\n    min: z.number().describe('The minimum acceptable temperature (Celsius).'),\n    max: z.number().describe('The maximum acceptable temperature (Celsius).'),\n  }).describe('The acceptable temperature range.'),\n  humidityRange: z.object({\n    min: z.number().describe('The minimum acceptable humidity (percentage).'),\n    max: z.number().describe('The maximum acceptable humidity (percentage).'),\n  }).describe('The acceptable humidity range.'),\n  pHRange: z.object({\n    min: z.number().describe('The minimum acceptable pH level.'),\n    max: z.number().describe('The maximum acceptable pH level.'),\n  }).describe('The acceptable pH range.'),\n  waterLevelRange: z.object({\n    min: z.number().describe('The minimum acceptable water level (cm).'),\n    max: z.number().describe('The maximum acceptable water level (cm).'),\n  }).describe('The acceptable water level range.'),\n   ecRange: z.object({\n    min: z.number().describe('The minimum acceptable EC level.'),\n    max: z.number().describe('The maximum acceptable EC level.'),\n  }).describe('The acceptable EC range.'),\n  dissolvedOxygenRange: z.object({\n    min: z.number().describe('The minimum acceptable dissolved oxygen level (ppm).'),\n    max: z.number().describe('The maximum acceptable dissolved oxygen level (ppm).'),\n  }).describe('The acceptable dissolved oxygen range.'),\n  lastLoggedActions: z.string().describe('A list of the last logged actions done to the hydroponics system.'),\n});\n\nexport type SuggestActionFromSensorDataInput = z.infer<typeof SuggestActionFromSensorDataInputSchema>;\n\nconst SuggestActionFromSensorDataOutputSchema = z.object({\n  suggestedActions: z.string().describe('Suggested actions to take to address out-of-range sensor readings.'),\n});\n\nexport type SuggestActionFromSensorDataOutput = z.infer<typeof SuggestActionFromSensorDataOutputSchema>;\n\nexport async function suggestActionFromSensorData(input: SuggestActionFromSensorDataInput): Promise<SuggestActionFromSensorDataOutput> {\n  return suggestActionFromSensorDataFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'suggestActionFromSensorDataPrompt',\n  input: {\n    schema: z.object({\n      sensorData: z.object({\n        temperatureCelsius: z.number().describe('The temperature reading from the sensor (in Celsius).'),\n        waterTemperatureCelsius: z.number().describe('The water temperature reading from the sensor (in Celsius).'),\n        humidity: z.number().describe('The humidity reading from the sensor (percentage).'),\n        pH: z.number().describe('The pH level reading from the sensor.'),\n        waterLevelCm: z.number().describe('The water level reading from the sensor (in cm).'),\n        ec: z.number().describe('The EC level reading from the sensor.'),\n        dissolvedOxygen: z.number().describe('The dissolved oxygen reading from the sensor (in ppm).'),\n      }).describe('The sensor data from the hydroponic system.'),\n      temperatureRange: z.object({\n        min: z.number().describe('The minimum acceptable temperature (Celsius).'),\n        max: z.number().describe('The maximum acceptable temperature (Celsius).'),\n      }).describe('The acceptable temperature range.'),\n      humidityRange: z.object({\n        min: z.number().describe('The minimum acceptable humidity (percentage).'),\n        max: z.number().describe('The maximum acceptable humidity (percentage).'),\n      }).describe('The acceptable humidity range.'),\n      pHRange: z.object({\n        min: z.number().describe('The minimum acceptable pH level.'),\n        max: z.number().describe('The maximum acceptable pH level.'),\n      }).describe('The acceptable pH range.'),\n      waterLevelRange: z.object({\n        min: z.number().describe('The minimum acceptable water level (cm).'),\n        max: z.number().describe('The maximum acceptable water level (cm).'),\n      }).describe('The acceptable water level range.'),\n      ecRange: z.object({\n        min: z.number().describe('The minimum acceptable EC level.'),\n        max: z.number().describe('The maximum acceptable EC level.'),\n      }).describe('The acceptable EC range.'),\n      dissolvedOxygenRange: z.object({\n        min: z.number().describe('The minimum acceptable dissolved oxygen level (ppm).'),\n        max: z.number().describe('The maximum acceptable dissolved oxygen level (ppm).'),\n      }).describe('The acceptable dissolved oxygen range.'),\n      lastLoggedActions: z.string().describe('A list of the last logged actions done to the hydroponics system.'),\n    }),\n  },\n  output: {\n    schema: z.object({\n      suggestedActions: z.string().describe('Suggested actions to take to address out-of-range sensor readings.'),\n    }),\n  },\n  prompt: `You are an AI assistant that provides recommendations for a hydroponic system.\n\n  Here is the current sensor data:\n  Temperature: {{{sensorData.temperatureCelsius}}}°C (Range: {{{temperatureRange.min}}} - {{{temperatureRange.max}}}°C)\n  Water Temperature: {{{sensorData.waterTemperatureCelsius}}}°C\n  Humidity: {{{sensorData.humidity}}}% (Range: {{{humidityRange.min}}} - {{{humidityRange.max}}}%)\n  pH: {{{sensorData.pH}}} (Range: {{{pHRange.min}}} - {{{pHRange.max}}})\n  Water Level: {{{sensorData.waterLevelCm}}} cm (Range: {{{waterLevelRange.min}}} - {{{waterLevelRange.max}}} cm)\n  EC: {{{sensorData.ec}}} (Range: {{{ecRange.min}}} - {{{ecRange.max}}})\n  Dissolved Oxygen: {{{sensorData.dissolvedOxygen}}} ppm (Range: {{{dissolvedOxygenRange.min}}} - {{{dissolvedOxygenRange.max}}} ppm)\n\n  Here are the last logged actions:\n  {{{lastLoggedActions}}}\n\n  Based on this information, suggest actions to take to address any out-of-range sensor readings. Explain why the sensor reading is outside of the desired range and what impact it could have on plant growth. Prioritize immediate corrective actions and provide clear, concise instructions.\n  `,\n});\n\nconst suggestActionFromSensorDataFlow = ai.defineFlow<\n  typeof SuggestActionFromSensorDataInputSchema,\n  typeof SuggestActionFromSensorDataOutputSchema\n>({\n  name: 'suggestActionFromSensorDataFlow',\n  inputSchema: SuggestActionFromSensorDataInputSchema,\n  outputSchema: SuggestActionFromSensorDataOutputSchema,\n}, async input => {\n  const {output} = await prompt(input);\n  return output!;\n});\n\n"],"names":[],"mappings":";;;;;IA0DsB","debugId":null}},
    {"offset": {"line": 847, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport {useState, useEffect} from 'react';\nimport {Card, CardContent, CardDescription, CardHeader, CardTitle} from '@/components/ui/card';\nimport {Button} from '@/components/ui/button';\nimport {Input} from '@/components/ui/input';\nimport {Textarea} from '@/components/ui/textarea';\nimport {toast} from \"@/hooks/use-toast\";\nimport {\n  Chart,\n  ChartContainer,\n  ChartLegend,\n  ChartLegendContent,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartStyle,\n} from \"@/components/ui/chart\";\nimport * as Recharts from \"recharts\";\nimport {getSensorData} from '@/services/sensor';\nimport {provideGrowthRecommendations} from '@/ai/flows/provide-growth-recommendations';\nimport {suggestActionFromSensorData} from '@/ai/flows/suggest-action-from-sensor-data';\n\nconst chartConfig = {\n  temperature: {\n    label: \"溫度 (°C)\",\n    color: \"var(--chart-1)\",\n  },\n  waterTemperature: {\n    label: \"水溫 (°C)\",\n    color: \"var(--chart-2)\",\n  },\n  humidity: {\n    label: \"濕度 (%)\",\n    color: \"var(--chart-3)\",\n  },\n  pH: {\n    label: \"酸鹼值\",\n    color: \"var(--chart-4)\",\n  },\n  waterLevel: {\n    label: \"水位 (cm)\",\n    color: \"var(--chart-5)\",\n  },\n  ec: {\n    label: \"電導度 (EC)\",\n    color: \"var(--chart-1)\",\n  },\n  dissolvedOxygen: {\n    label: \"溶氧量 (ppm)\",\n    color: \"var(--chart-2)\",\n  }\n};\n\n// Dummy historical data\nconst dummyHistoricalData = Array.from({length: 20}, (_, i) => ({\n  name: `Day ${i + 1}`,\n  temperature: 20 + Math.random() * 5,\n  waterTemperature: 18 + Math.random() * 5,\n  humidity: 50 + Math.random() * 30,\n  pH: 5.5 + Math.random() * 2,\n  waterLevel: 10 + Math.random() * 10,\n  ec: 1.0 + Math.random() * 0.5,\n  dissolvedOxygen: 6 + Math.random() * 2,\n}));\n\nexport default function Home() {\n  const [sensorData, setSensorData] = useState({\n    temperatureCelsius: 0,\n    waterTemperatureCelsius: 0,\n    humidity: 0,\n    pH: 0,\n    waterLevelCm: 0,\n    ec: 0,\n    dissolvedOxygen: 0,\n  });\n  const [actionLog, setActionLog] = useState('');\n  const [growthRecommendations, setGrowthRecommendations] = useState('Loading...');\n\n  useEffect(() => {\n    async function fetchSensorData() {\n      const data = await getSensorData();\n      setSensorData(data);\n    }\n\n    fetchSensorData();\n  }, []);\n\n  const handleLogAction = (event: any) => {\n    event.preventDefault();\n    toast({\n      title: \"動作已記錄\",\n      description: \"您的動作已記錄。\",\n    });\n  };\n\n  const handleGetRecommendations = async () => {\n    try {\n      const recommendations = await getRecommendations();\n      setGrowthRecommendations(recommendations);\n    } catch (error: any) {\n      console.error(\"Error getting recommendations:\", error);\n      setGrowthRecommendations(`Error: ${error.message || 'Failed to fetch recommendations'}`);\n    }\n  };\n\n  async function getRecommendations() {\n    const temperatureRange = {min: 18, max: 28};\n    const humidityRange = {min: 40, max: 80};\n    const pHRange = {min: 5.5, max: 7.5};\n    const waterLevelRange = {min: 5, max: 20};\n\n    const aiInput = {\n      sensorData: {\n        temperatureCelsius: sensorData.temperatureCelsius,\n        waterTemperatureCelsius: sensorData.waterTemperatureCelsius,\n        humidity: sensorData.humidity,\n        pH: sensorData.pH,\n        waterLevelCm: sensorData.waterLevelCm,\n        ec: sensorData.ec,\n        dissolvedOxygen: sensorData.dissolvedOxygen,\n      },\n      temperatureRange: temperatureRange,\n      humidityRange: humidityRange,\n      pHRange: pHRange,\n      waterLevelRange: waterLevelRange,\n      lastLoggedActions: actionLog,\n    };\n    const suggestedActions = await suggestActionFromSensorData(aiInput);\n    return suggestedActions!.suggestedActions;\n  }\n\n  return (\n    <div className=\"flex flex-col min-h-screen bg-background\">\n      <header className=\"px-6 py-4 border-b\">\n        <h1 className=\"text-2xl font-bold\">水耕系統儀表板</h1>\n      </header>\n      <main className=\"container mx-auto p-6 flex-1\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n          <Card>\n            <CardHeader>\n              <CardTitle>溫度</CardTitle>\n              <CardDescription>目前溫度 (攝氏度)</CardDescription>\n            </CardHeader>\n            <CardContent>{sensorData.temperatureCelsius}°C</CardContent>\n          </Card>\n          <Card>\n            <CardHeader>\n              <CardTitle>水溫</CardTitle>\n              <CardDescription>目前水溫 (攝氏度)</CardDescription>\n            </CardHeader>\n            <CardContent>{sensorData.waterTemperatureCelsius}°C</CardContent>\n          </Card>\n          <Card>\n            <CardHeader>\n              <CardTitle>濕度</CardTitle>\n              <CardDescription>目前濕度百分比</CardDescription>\n            </CardHeader>\n            <CardContent>{sensorData.humidity}%</CardContent>\n          </Card>\n          <Card>\n            <CardHeader>\n              <CardTitle>酸鹼值</CardTitle>\n              <CardDescription>目前酸鹼值</CardDescription>\n            </CardHeader>\n            <CardContent>{sensorData.pH}</CardContent>\n          </Card>\n          <Card>\n            <CardHeader>\n              <CardTitle>水位</CardTitle>\n              <CardDescription>目前水位 (公分)</CardDescription>\n            </CardHeader>\n            <CardContent>{sensorData.waterLevelCm} cm</CardContent>\n          </Card>\n          <Card>\n            <CardHeader>\n              <CardTitle>電導度 (EC)</CardTitle>\n              <CardDescription>目前電導度</CardDescription>\n            </CardHeader>\n            <CardContent>{sensorData.ec}</CardContent>\n          </Card>\n           <Card>\n            <CardHeader>\n              <CardTitle>溶氧量</CardTitle>\n              <CardDescription>目前溶氧量 (ppm)</CardDescription>\n            </CardHeader>\n            <CardContent>{sensorData.dissolvedOxygen} ppm</CardContent>\n          </Card>\n        </div>\n\n        <div className=\"mb-8\">\n          <h2 className=\"text-xl font-semibold mb-4\">歷史資料</h2>\n          <Card>\n            <CardContent>\n              <ChartContainer id=\"sensor-data\" config={chartConfig}>\n                <Recharts.LineChart data={dummyHistoricalData} margin={{top: 5, right: 30, left: 20, bottom: 5}}>\n                  <Recharts.CartesianGrid strokeDasharray=\"3 3\"/>\n                  <Recharts.XAxis dataKey=\"name\"/>\n                  <Recharts.YAxis/>\n                  <Recharts.Tooltip content={<ChartTooltipContent/>}/>\n                  <Recharts.Legend content={<ChartLegendContent/>}/>\n                  <Recharts.Line type=\"monotone\" dataKey=\"temperature\" stroke=\"var(--chart-1)\"/>\n                  <Recharts.Line type=\"monotone\" dataKey=\"waterTemperature\" stroke=\"var(--chart-2)\"/>\n                  <Recharts.Line type=\"monotone\" dataKey=\"humidity\" stroke=\"var(--chart-3)\"/>\n                  <Recharts.Line type=\"monotone\" dataKey=\"pH\" stroke=\"var(--chart-4)\"/>\n                   <Recharts.Line type=\"monotone\" dataKey=\"waterLevel\" stroke=\"var(--chart-5)\"/>\n                  <Recharts.Line type=\"monotone\" dataKey=\"ec\" stroke=\"var(--chart-1)\"/>\n                  <Recharts.Line type=\"monotone\" dataKey=\"dissolvedOxygen\" stroke=\"var(--chart-2)\"/>\n                </Recharts.LineChart>\n              </ChartContainer>\n            </CardContent>\n          </Card>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          <div>\n            <h2 className=\"text-xl font-semibold mb-4\">動作紀錄</h2>\n            <Card>\n              <CardContent>\n                <form onSubmit={handleLogAction} className=\"flex flex-col gap-4\">\n                  <Textarea\n                    placeholder=\"記錄採取的動作 (例如：營養調整、換水)\"\n                    value={actionLog}\n                    onChange={(e) => setActionLog(e.target.value)}\n                  />\n                  <Button type=\"submit\">記錄動作</Button>\n                </form>\n              </CardContent>\n            </Card>\n          </div>\n\n          <div>\n            <h2 className=\"text-xl font-semibold mb-4\">AI 生長建議</h2>\n            <Card>\n              <CardContent>\n                <p>{growthRecommendations}</p>\n                <Button onClick={handleGetRecommendations} className=\"mt-4\">\n                  取得建議\n                </Button>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </main>\n      <footer className=\"px-6 py-4 border-t text-center text-muted-foreground\">\n        <p>&copy; {new Date().getFullYear()} HydroView. 保留所有權利。</p>\n      </footer>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}